//=============================================================================
//
// サウンド処理 [sound.h]
//
//=============================================================================
#ifndef _MUSIC_H_
#define _MUSIC_H_

#include "main.h"

//*****************************************************************************
// サウンドファイル
//*****************************************************************************
typedef enum
{
	MUSIC,
	MUSIC_LABEL_MAX,
} MUSIC_LABEL;

//*****************************************************************************
// プロトタイプ宣言
//*****************************************************************************
HRESULT InitMusic(HWND hWnd);
void UninitMusic(void);

//------------------------------------------------------------------------------
//	関数名:	PlayMusic
//	引数:	MUSIC_LABEL 再生開始位置
//	戻り値:	なし
//	説明:	指定された位置から音を再生させる
//------------------------------------------------------------------------------
HRESULT PlayMusic(MUSIC_LABEL label, unsigned int MPointer = 0);

void StopMusic(MUSIC_LABEL label);
void StopMusic(void);

//------------------------------------------------------------------------------
//	関数名:	SetMusicM
//	引数:	ファイルURL　ループ回数
//	戻り値:	なし
//	説明:	音楽ファイルの入れ替え
//------------------------------------------------------------------------------
void SetMusicM(char *FileAddress, int nLoop = 0);

//------------------------------------------------------------------------------
//	関数名:	GetPlayStatusM
//	引数:	MUSIC_LABEL
//	戻り値: true false
//	説明:	再生状態の取得
//------------------------------------------------------------------------------
bool GetPlayStatusM(MUSIC_LABEL label);

//------------------------------------------------------------------------------
//	関数名:	SetMusicVolume
//	引数:	MUSIC_LABEL 音量(0.0 ~~ 1.0)
//	戻り値: なし
//	説明:	指定されたラベルに音量設定を行う
//------------------------------------------------------------------------------
void SetMusicVolume(MUSIC_LABEL label, float fVolume);

void MusicDebug();

//------------------------------------------------------------------------------
//	関数名:	GetMusicLength
//	引数:	MUSIC_LABEL
//	戻り値: なし
//	説明:	指定されたラベルの長さを取得する
//------------------------------------------------------------------------------
float GetMusicLength(MUSIC_LABEL label);

#endif
